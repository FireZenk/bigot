{"name":"Bigot","tagline":"A little 'moustache inspired' template engine but more semantic","body":"[![NPM version](https://badge.fury.io/js/bigot.png)](http://badge.fury.io/js/bigot) [![Bower version](https://badge.fury.io/bo/bigot.png)](http://badge.fury.io/bo/bigot) [![GitHub version](https://badge.fury.io/gh/FireZenk%2Fbigot.png)](http://badge.fury.io/gh/FireZenk%2Fbigot) [![Build Status](https://travis-ci.org/FireZenk/bigot.png?branch=master)](https://travis-ci.org/FireZenk/bigot)\r\n\r\nBigot\r\n======\r\nA little _moustache inspired_ template engine but more semantic.\r\nBigot is easy to learn, read and write.\r\n\r\nHow to install\r\n------\r\nAs Node module\r\n\r\n```\r\nnpm install bigot --save\r\n```\r\nAs Bower component\r\n\r\n```\r\nbower install bigot\r\n```\r\nOr as Grunt plugin\r\n\r\n```\r\nnpm install grunt-contrib-bigot --save-dev\r\n```\r\n\r\nHow to use\r\n------\r\n######Reserved keywords:\r\nIn order to be an engine of more semantic templates, Bigot use certain words to describe his actions, which shall therefore be reserved and may not be used as names or properties of objects/arrays.\r\n\r\nThis is the list of reserved keywords:\r\n* include\r\n* comment\r\n* if\r\n* else\r\n* loop\r\n* end\r\n* @\r\n\r\n######Include Bigot:\r\n```\r\nBigot = require(\"node_modules/bigot/lib/index.js\");\r\n```\r\n\r\n-----\r\n\r\n######Render objects:\r\n```\r\nsource = \"<h1>{title}</h1><h6>{subtitle}</h6><p>{content}</p><p>2 + 3 = {func}</p>\";\r\n\r\ndata = {title: \"Hello World!\", subtitle: \"and hello Bigot!\",\r\n\t\t\tcontent: \"This is a Bigot test template\", func: function() {return 2+3}};\r\n\r\nconsole.log(Bigot.render(source, data));\r\n\r\n```\r\n>output: `<h1>Hello World!</h1><h6>and hello Bigot!</h6><p>This is a Bigot test template</p><p>2 + 3 = 5</p>`\r\n\r\n######Render including templates:\r\n```\r\nsource = \"{include header}<h1>{title}</h1><h6>{subtitle}</h6><p>{content}</p><p>2 + 3 = {func}</p>{include footer}\";\r\n\r\ndata = {header: \"./test/header.html\", footer: \"./test/footer.html\", title: \"Hello World!\",\r\n\tsubtitle: \"and hello Bigot!\", content: \"This is a Bigot test template\", func: function() {return 2 + 3;}};\r\n\r\nconsole.log(Bigot.render(source, data));\r\n\r\n```\r\n>output: `<html><head><title>Bigot test</title></head><body><h1>Hello World!</h1><h6>and hello Bigot!</h6><p>This is a Bigot test template</p><p>2 + 3 = 5</p></body></html>`\r\n\r\n######Render arrays:\r\n```\r\nsource = \"<ul>{loop names}<li>{@}</li>{end names}</ul>\";\r\n\r\ndata = {names: [\"Abby\",\"Matt\",\"Jhon\"]};\r\n\r\nconsole.log(Bigot.render(source, data));\r\n```\r\n>output: `<ul> <li>Abby</li> <li>Matt</li> <li>Jhon</li> </ul>`\r\n\r\n######Render array of objects:\r\n```\r\nsource = \"<ul>{loop people}<li>{name}, {age}</li>{end people}</ul>\";\r\n\r\ndata = {people: [{name: \"Abby\", age: \"24\"},\r\n\t\t\t\t{name: \"Matt\", age: \"32\"},\r\n\t\t\t\t{name: \"John\", age: \"18\"}]};\r\n\r\nconsole.log(Bigot.render(source, data));\r\n```\r\n>output: `<ul> <li>Abby, 24</li> <li>Matt, 32</li> <li>John, 18</li> </ul>`\r\n\r\n######Render arrays into array of objects:\r\n```\r\nsource = \"<ul>{loop people}<li>{name}, {age} {loop sports}<span>{@}</span>{end sports}</li>{end people}</ul>\";\r\n\r\ndata = {people: [{name: \"Abby\", age: \"24\", sports: [\"hockey\",\"curling\"]},\r\n\t\t\t\t {name: \"Matt\", age: \"32\", sports: [\"futbol\"]},\r\n\t\t\t\t {name: \"John\", age: \"18\", sports: [\"tennis\",\"basketball\"]}\r\n\t\t\t\t]};\r\n\r\nconsole.log(Bigot.render(source, data));\r\n```\r\n>output: `<ul> <li>Abby, 24 <span>hockey</span><span>curling</span></li> <li>Matt, 32 <span>futbol</span></li> <li>John, 18 <span>tennis</span><span>basketball</span></li> </ul>`\r\n\r\n######Render object arrays into array of objects:\r\n```\r\nsource = \"<ul>{loop people}<li>{name}, {age} {loop activities}<span>{sport} and {hobby}</span>{end activities}</li>{end people}</ul>\";\r\n\r\ndata = {people: [{name: \"Abby\", age: \"24\", activities: [{\r\n\t\t\t\t\t\t\t\t\t\t\tsport: \"hockey\",\r\n\t\t\t\t\t\t\t\t\t\t\thobby: \"drive\"}] },\r\n\t\t\t\t {name: \"Matt\", age: \"32\", activities: [{\r\n\t\t\t\t\t\t\t\t\t\t\tsport: \"football\",\r\n\t\t\t\t\t\t\t\t\t\t\thobby: \"pets\"}] },\r\n\t\t\t\t {name: \"John\", age: \"18\", activities: [{\r\n\t\t\t\t\t\t\t\t\t\t\tsport: \"tennis\",\r\n\t\t\t\t\t\t\t\t\t\t\thobby: \"videogames\"}] }\r\n\t\t\t\t]};\r\n\r\nconsole.log(Bigot.render(source, data));\r\n```\r\n>output: `<ul> <li>Abby, 24 <span>hockey and drive</span></li> <li>Matt, 32 <span>football and pets</span></li> <li>John, 18 <span>tennis and videogames</span></li> </ul>`\r\n\r\n######Render conditionals:\r\n```\r\nsource = \"{if showMe}<p>Hello {if canShow}<span>friend!</span>{else}<span>{name}!</span>{end canShow}</p>{else}<p>Bye!</p>{end showMe}\";\r\n\r\ndata = {name: \"Lightning McQueen\",\r\n      \tshowMe: function() {return true},\r\n      \tcanShow: function() {return false}};\r\n      \r\nconsole.log(Bigot.render(source, data));\r\n```\r\n>output: `<p>Hello <span>Lightning McQueen!</span></p>`\r\n\r\n######Comments with Bigot:\r\n```\r\nsource = \"{comment Start of file}<h1>{title}</h1><h6>{subtitle}</h6>{comment Middle of file}<p>{content}</p><p>2 + 3 = {func}</p>{comment End of file}\";\r\n\r\ndata = {title: \"Hello World!\", subtitle: \"and hello Bigot!\", content: \"This is a Bigot test template\", func: function() {return 2 + 3;}}\r\n      \r\nconsole.log(Bigot.render(source, data));\r\n```\r\n>output: `<h1>Hello World!</h1><h6>and hello Bigot!</h6><p>This is a Bigot test template</p><p>2 + 3 = 5</p>`\r\n\r\n######Helpers with Bigot:\r\n```\r\nsource = \"<h1>{toUpper title}</h1><h6>{toLower subtitle}</h6>\";\r\n\r\ndata = {\r\n      title: \"Hello World!\",\r\n      subtitle: \"and hello Bigot!\",\r\n      toUpper: function(text) {\r\n        text = JSON.stringify(this);\r\n        text = text.substring(1, text.length-1);\r\n        return text.toUpperCase();\r\n      },\r\n      toLower: function(text) {\r\n        text = JSON.stringify(this);\r\n        text = text.substring(1, text.length-1);\r\n        return text.toLowerCase();\r\n      }  };      \r\n      \r\nconsole.log(Bigot.render(source, data));\r\n```\r\n>output: `<h1>HELLO WORLD!</h1><h6>and hello bigot!</h6>`\r\n\r\n######More samples? See test/test.coffee\r\n\r\nTest\r\n------\r\n`nodeunit test`\r\n\r\nAuthor\r\n------\r\n__Jorge Garrido Oval__\r\n* [https://github.com/FireZenk](https://github.com/FireZenk)\r\n\r\nLicense\r\n------\r\nBigot is released under the MIT license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}